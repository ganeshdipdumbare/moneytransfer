package account

import (
	"errors"
	"math/rand"
	"time"
)

type BankAccount struct {
	// ID is the unique identifier for the bank account
	// it is generated by the database
	ID               int64
	OrganizationName string
	BalanceCents     int64
	IBAN             string
	BIC              string
}

func NewBankAccount(organizationName string, balanceCents int64, iban string, bic string) *BankAccount {
	// Generate a simple unique ID based on timestamp and random number
	// In a real application, you might want to use a more robust ID generation method
	r := rand.New(rand.NewSource(time.Now().UnixNano()))
	randomID := r.Int63n(1000000) + 1 // Ensure ID is not zero

	return &BankAccount{
		ID:               randomID,
		OrganizationName: organizationName,
		BalanceCents:     balanceCents,
		IBAN:             iban,
		BIC:              bic,
	}
}

func (b *BankAccount) Validate() error {
	if b.OrganizationName == "" {
		return errors.New("organization name is required")
	}
	if b.IBAN == "" {
		return errors.New("iban is required")
	}
	if b.BIC == "" {
		return errors.New("bic is required")
	}
	return nil
}
